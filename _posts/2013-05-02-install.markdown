---
layout: default
title: Rails Girls インストール・レシピ
permalink: install
---

# Rails Girls インストール・レシピ
<span class="muted">クッキングタイム: 5分 (作業時間) / 15-30分 (待ち時間)</span>

Ruby on Rails上にアプリケーションを作るためには、
あなたのコンピュータに必要なソフトウェアと開発環境をセットアップする必要があります。

あなたのオペレーティングシステムの説明をご覧ください。
もし、なにか問題が発生してもあわてずにコーチに声をかけてください。
コーチと一緒に問題を解決しましょう。

* [OS X 用セットアップ](#setup_for_os_x)
* [Windows 用セットアップ](#setup_for_windows)
* [Linux 用セットアップ](#setup_for_linux)
* [Alternative Installment for all OS](#virtual-machine)
* [クラウドサービスを利用する](#using-a-cloud-service)

*コーチの方へ*:
インストール中に問題が発生した場合、この [Troubleshooting](https://github.com/railsgirls-jp/railsgirls-jp.github.io/wiki/Troubleshooting)  のページを参考にして下さい。

<hr />

## <a id="setup_for_os_x">OS X 用セットアップ</a>

### *1.* オペレーティング・システムのバージョンを調べましょう。

Appleメニューをクリックして *About This Mac* (図 1) を選びます。

![Apple menu](/images/1.png "Apple menu")

図 1

### *2.* 開いたウィンドウに使用しているオペレーティング・システムのバージョンが表示されます。(図 2)。

バージョン番号が 10.6, 10.7, 10.8, 10.9, または 10.10 で始まっていたら、このドキュメントに従って進めます。
これ以外のバージョンだったら、イベントでコーチと一緒にセットアップします。

![About this Mac dialog](/images/2.png "About this Mac dialog")

図 2

### *3-A.* rbenv を使って Ruby と Ruby on Rails をインストール(OS X 10.9 以上の場合):

OS X 10.9 以上の場合は、Homebrew と rbenv を使って環境をつくります。

#### 3-A-1. Command line tools をターミナルからインストール:

{% highlight sh %}
xcode-select --install
{% endhighlight %}

#### 3-A-2. [Homebrew](http://brew.sh/)をインストール:

{% highlight sh %}
ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
{% endhighlight %}

#### 3-A-3. [rbenv](https://github.com/sstephenson/rbenv)をインストール:

{% highlight sh %}
brew update
brew install rbenv rbenv-gem-rehash ruby-build
echo 'eval "$(rbenv init -)"' >> ~/.bash_profile
echo 'export PATH="$HOME/.rbenv/shims:$PATH"' >> ~/.bash_profile
source ~/.bash_profile
{% endhighlight %}

#### 3-A-4. rbenvを使ってRubyをインストール:

"rbenv install -l" コマンドでrbenvでインストール可能なRubyのバージョンを確認できます。

{% highlight sh %}
rbenv install 2.2.3
{% endhighlight %}

※もしも "OpenSSL::SSL::SSLError: ... : certificate verify failed" エラーが起きた場合は、以下の手順を試してみてください。

{% highlight sh %}
brew install curl-ca-bundle
cp /usr/local/opt/curl-ca-bundle/share/ca-bundle.crt `ruby -ropenssl -e 'puts OpenSSL::X509::DEFAULT_CERT_FILE'`
{% endhighlight %}

#### 3-A-5. デフォルトのRuby を設定:

{% highlight sh %}
rbenv global 2.2.3
{% endhighlight %}

#### 3-A-6. Railsのインストール:

{% highlight sh %}
gem i rails --no-ri --no-rdoc
{% endhighlight %}

#### *3-B.* 使用している OS Xのバージョン用 RailsInstaller ダウンロードします。(OS X10.6, 10.7, 10.8の場合)

* [10.7, 10.8 用 RailsInstaller](http://railsinstaller.s3.amazonaws.com/RailsInstaller-1.0.4-osx-10.7.app.tgz) <span class="muted">(325MB)</span>
* [10.6 用 RailsInstaller](http://railsinstaller.s3.amazonaws.com/RailsInstaller-1.0.4-osx-10.6.app.tgz) <span class="muted">(224MB)</span>

ダウンロードしたファイルをダブルクリックするとカレントディレクトリに解凍されます。
この解凍された'RailsInstaller-1.0.4-osx-10.7.app' あるいは 'RailsInstaller-1.0.4-osx-10.6.app' を
ダブルクリックしてインストラクションに従ってインストールします。インストーラが 'Rails Installer OS X'と冒頭に書いて
あるREADMEファイルを開きますが、このインストラクションは **無視** してください。

もしもRailsのバージョンが最新ではない場合は、以下のコマンドをターミナルから実行することでバージョンアップできます。

{% highlight sh %}
gem update rails --no-ri --no-rdoc
{% endhighlight %}

Rails アプリを作成するコマンドを実行してインストールと Rails のバージョンアップが問題なく完了した事を確認してください。

{% highlight sh %}
rails new railsgirls
{% endhighlight %}

### *4.* コードを編集するのに必要なテキストエディタをインストールする。

このワークショップでは Atom エディタを推奨しています。

* [Atom エディタをダウンロードしてインストールする](https://atom.io/)

Mac OS X 10.7 およびそれ以前のバージョンでは、 Atom エディタは非対応ですが、 [Sublime Text 2](http://www.sublimetext.com/2) エディタが利用可能です。

### *5.* ブラウザを更新する

[whatbrowser.org](http://whatbrowser.org) を参照して、お使いのブラウザが最新版でなければ更新してください。

これで、Ruby on Railsのプログラミングを始められるまでの環境セットアップは終了です。おめでとう！

<hr />

## <a id="setup_for_windows">Windows 用セットアップ</a>

### *1.* Install Rails

[RailsInstaller](https://s3.amazonaws.com/railsinstaller/Windows/railsinstaller-3.1.0.exe) をダウンロードして、実行します。
インストールのオプションは全てデフォルトを選択します。

Open `Command Prompt with Ruby on Rails` and run the following command:

{% highlight sh %}
rails -v
{% endhighlight %}

もしもRailsのバージョンが4よりも小さい場合は 以下のコマンドを "Command Prompt with Ruby on Rails" から実行することでバージョンアップできます。

{% highlight sh %}
gem update rails --no-ri --no-rdoc
{% endhighlight %}

Rails アプリを作成するコマンドを実行してインストールと Rails のバージョンアップが問題なく完了した事を確認してください。

{% highlight sh %}
rails new railsgirls
cd railsgirls
rails server
{% endhighlight %}

## 出るかもしれないエラー

### Gem::RemoteFetcher エラー

`rails new railsgirls` や `gem update rails` を実行すると下記のようなエラーが出るかもしれません:

{% highlight sh %}
Gem::RemoteFetcher::FetchError: SSL_connect returned=1 errno=0 state=SSLv3 read
server certificate B: certificate verify failed (https://rubygems.org/gems/i18n-0.6.11.gem)
{% endhighlight %}

これは Rubygems のバージョンが古く、更新が必要であることを意味していますので、まず Rubygems のバージョンをチェックしましょう。

{% highlight sh %}
gem -v
{% endhighlight %}

もし `2.2.3` より古いバージョンだったら、以下の手順で更新する必要があります:

[ruby-gems-update gem](https://github.com/rubygems/rubygems/releases/download/v2.2.3/rubygems-update-2.2.3.gem) をダウンロードし、それを `c:\rubygems-update-2.2.3.gem` として保存して実行してください:

{% highlight sh %}
gem install --local c:\rubygems-update-2.2.3.gem
update_rubygems --no-ri --no-rdoc
gem uninstall rubygems-update -x
{% endhighlight %}

Rubygems のバージョンをチェックしましょう。

{% highlight sh %}
gem -v
{% endhighlight %}

バージョンが `2.2.3` より大きいことを確かめてください。
もし失敗していたらやり直してください。


### 'x64_mingw' is not a valid platform エラー

`rails server` を実行すると以下のようなエラーが出ることがあります:

{% highlight sh %}
'x64_mingw' is not a valid platform
{% endhighlight %}

もし RailsInstaller を実行した後でこのエラーが出たときには、`Gemfile` というファイルをちょっとだけ編集する必要があります:

そのファイルの最後の方に下記のような行があるはずです:

{% highlight sh %}
gem 'tzinfo-data', platforms: [:mingw, :mswin, :x64_mingw]
{% endhighlight %}

このように `:x64_mingw` と書かれていたら、 `:x64_mingw` の部分を削除してください。
つまり上の行を下記のように変更するわけです:

{% highlight sh %}
gem 'tzinfo-data', platforms: [:mingw, :mswin]
{% endhighlight %}

ファイルを編集し終わったら、再びコマンドプロンプトで `budle update` を実行してみてください。

### *2.* コードを編集するためのテキストエディタが必要になります。

このワークショップでは Atom エディタを推奨しています。

* [Atom エディタをダウンロードしてインストールする](https://github.com/atom/atom/releases/latest)
  * 上記リンクから zip ファイルをダウンロードして展開します
  * Atom フォルダを Program Files フォルダへコピーします
  * コピーしたフォルダから atom を起動します

Windows Vista およびそれ以前のバージョンでは Atom エディタは非対応ですが、[Sublime Text エディタ](http://www.sublimetext.com/2) を利用可能です。(※Windows で Sublime Text を使う場合、日本語入力欄が入力箇所に出ない問題があります。気になる場合は以下の手順で日本語入力パッチ(修正プログラム)をインストールしてください。[Sublime Text 日本語入力パッチ](https://github.com/chikatoike/IMESupport/archive/master.zip)をダウンロードします。Sublime Text アプリメニューの Preferences から Browse Packeges を選び、フォルダを表示させます。 ダウンロードしたzipを解凍してできたフォルダ(IMESupport-master)をここへコピーします。Sublime Text が起動している場合は再起動します。)

これで、Ruby on Railsのプログラミングを始められるまでの環境セットアップは終了です。おめでとう！

### *3.* ブラウザを更新する

もし Internet Explorer をお使いでしたら、[Firefox](mozilla.org/firefox) か [Google Chrome](google.com/chrome) をインストールすることをお勧めします。

また、[whatbrowser.org](http://whatbrowser.org) を参照して、お使いのブラウザが最新版でなければ更新してください。

<hr />

## <a id="setup_for_linux">Linux 用セットアップ</a>

### *1.* Install Rails

あなたの Linux ディストリビューション(Ubuntu や Fedora)に Ruby on Rails を開発する環境をインストールするには下の1行をコピーしてターミナルに貼り付け、Enter キーを押す必要があります。スクリーンに流れるテキストを眺めて少しの時間の間、楽しみにお待ち下さい。次に進むまでの間、飲み物を等を飲んで休憩してはいかがでしょうか。

#### Ubuntuの場合:

{% highlight sh %}
bash < <(curl -sL https://raw.github.com/railsgirls/installation-scripts/master/rails-install-ubuntu.sh)
{% endhighlight %}

gnome-terminal を使って RVM インストールを行いたいときは、Ruby と Rails の正しいバージョンを確かめる前にオプションを変更する必要があるかもしれません。
[RVM documentation](http://rvm.io/integration/gnome-terminal) を参照してください。

#### Fedoraの場合:

{% highlight sh %}
bash < <(curl -sL https://raw.github.com/railsgirls/installation-scripts/master/rails-install-fedora.sh)
{% endhighlight %}

下記のアプリケーション作成コマンドを実行して、正しくインストールされたことを確かめましょう。

{% highlight sh %}
rails new railsgirls
cd railsgirls
rails server
{% endhighlight %}
 
### *2.* コードを編集するためのテキストエディタが必要になります。

このワークショップでは Sublime Text エディタを推奨しています。

* [Sublime Text エディタをダウンロードしてインストールする](http://www.sublimetext.com/2)

### *3.* Update your browser

[whatbrowser.org](http://whatbrowser.org) を参照して、お使いのブラウザが最新版でなければ更新してください。

これで、Ruby on Railsのプログラミングを始められるまでの環境セットアップは終了です。おめでとう！

<hr />

## 仮想マシン

自分のコンピュータにインストールする代わりに仮想マシン上で開発環境をセットアップすることもできます。
詳しいことは [ここ]({% post_url 2014-03-24-alternative-dev-environment %}) を参照してください。

<hr />

## <a id="using-a-cloud-service">クラウドサービスを利用する</a>

あなたのコンピュータにRuby on Railsやエディタをインストールする代わりに、開発用のWebサービスを利用することもできます。ブラウザとネットへアクセスできる環境があればOKです。 ここでは [Nitrous](https://nitrous.io) を利用する手順を説明します。もしも、別のサービスを利用している場合は、例えば 'box' の代わりに 'workspace' という単語を使うなど用語の違いがあるかもしれませんが、概ね同じになっているはずです。

*オーガナイザーの方へ*:

Nitrous は有料サービスですが、コミュニティで使う場合は無料で使うことができます。 メールアドレス <pro [at] nitrous.io> へ、以下の内容を添えてコミュニティ用アカウントを申請してください。

- 使用者のメールアドレスのリスト
- 使用期間
- 使用開始日時
- アクセス可能期間(○日間、○週間 など)

### *1.* ブラウザを確認する

* Internet Explorer を利用している場合は、 [Google Chrome](https://www.google.com/intl/ja/chrome/browser/) または [Firefox](https://www.mozilla.org/ja/firefox/new/) をインストールしてください。（一部の機能がIEでは動かない場合があります。）

### *2.* アカウントを作成する

* [https://nitrous.io](https://nitrous.io/) からアカウントを作成します。
* ユーザーネーム、メールアドレス、パスワードを入力して、緑の 'Sign Up For Free' ボタン からアカウントを作成できます。

### *3.* Ruby on Rails の開発用に box (workspace) を設定する

* [Nitrous](https://nitrous.io/) の画面右上の Sign in をクリックし、作成したアカウントでログインします。緑の 'Open dashboard' ボタンをクリックし、ダッシュボード画面へ移動します。

* テンプレートから Ruby/Rails を選んで box を作ります。デフォルトのままで大丈夫ですが、もしも box の名前を変えたい場合は、変えても構いません。

* box が利用可能になるまで少し待ってください。

### *4.* box を探す方法、再起動する方法

* 今、box を作ったばかりであればこのステップはおそらく省略できますが、しばらくしてからログインするときのために知っておくと役立ちます。
* ダッシュボード、またはトップメニューの 'Boxes' から box を探すことができます
* box を選びます
* しばらく利用していないと、box は停止状態になっているかもしれません。( 赤い丸印になり、State: Stopped と表示されます。) 'Start' ボタンを押し、box を起動させます。
* box が起動した状態で、 'IDE' ボタンを押して開発を始めます。

### *5.* 開発する

前の節を参考に、box を選んで起動し、IDEボタンを押して開発用の画面に移動しておきましょう。

* 左側はフォルダとファイルを表示、選択できます。
* 中央部はエディタです。ここでファイルを編集します。
* 下部はターミナルです。ここでコマンドを実行します。
* 必要なものは全てブラウザにあります。ブラウザのほかにエディタやターミナルを起動する必要はありません。
* ガイドやチュートリアルを読む場合には、(Windowsマシンを利用している場合でも)Linux用のコマンドを使ってください。コマンドはクラウド上で実行され、その環境がLinuxマシンだからです。
* ガイドやチュートリアルで、ブラウザから例えば http://localhost:3000 へアクセスする場合は、アドレス欄に入力するのではなく、代わりにトップメニューから 'Preview' - 'Port 3000' を選ぶことで同じ操作ができます。
* 例えば、 http://localhost:3000/posts へアクセスしたい場合は、'Preview' - 'Port 3000' を選んだあと、 '/posts' をアドレス欄の末尾に加えてください。

* ※ Nitrous.io についての日本語の説明記事があります。分からないことがあった場合に役立つかもしれません。
  * [WebブラウザだけではじめるRuby/Railsプログラミング](http://qiita.com/machu/items/0ecc5699273c18fd1cd8)
